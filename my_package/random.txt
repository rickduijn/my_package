ros2 launch rtabmap_ros rtabmap.launch.py \
    rgb_topic:=/color/image \
    depth_topic:=/stereo/depth \
    camera_info_topic:=/color/camera_info \
    imu_topic:=/imu \
    frame_id:=oak-d_frame \
    approx_sync:=true \
    approx_sync_max_interval:=0.001 \
    wait_imu_to_init:=true \
    args:="--delete_db_on_start" \
    compressed:=true \
    queue_size:=50
    
    oak_rgb_camera_optical_frame
    
ros2 launch rtabmap_ros rtabmap.launch.py \
    rgb_topic:=/color/image \
    depth_topic:=/stereo/depth \
    camera_info_topic:=/color/camera_info \
    imu_topic:=/imu \
    frame_id:=oak_rgb_camera_optical_frame \
    approx_sync:=true \
    approx_sync_max_interval:=0.001 \
    wait_imu_to_init:=true \
    args:="--delete_db_on_start" \
    compressed:=true \
    queue_size:=50 \
    rviz:=true
    
    
ros2 bag play rosbag2_2022_09_14-11_48_42
ros2 bag play rosbag2_2022_11_03-13_03_34
\ on remote desktop
ros2 bag play rosbag2_2022_11_03-13_48_22



output 

[rgbd_odometry-3] [WARN] [1668440422.323106142] [rtabmap.rgbd_odometry]: rgbd_odometry: Did not receive data since 5 seconds! Make sure the input topics are published ("$ rostopic hz my_topic") and the timestamps in their header are set. Parameter "approx_sync" is false, which means that input topics should have all the exact timestamp for the callback to be called.
[rgbd_odometry-3] rgbd_odometry subscribed to (approx sync, max interval=0.001000s):
[rgbd_odometry-3]    /color/image_relay,
[rgbd_odometry-3]    /stereo/depth_relay,
[rgbd_odometry-3]    /color/camera_info
[rtabmap-4] [WARN] [1668440422.627713248] [rtabmap.rtabmap]: rtabmap: Did not receive data since 5 seconds! Make sure the input topics are published ("$ rostopic hz my_topic") and the timestamps in their header are set. If topics are coming from different computers, make sure the clocks of the computers are synchronized ("ntpdate"). If topics are not published at the same rate, you could increase "queue_size" parameter (current=50). 
[rtabmap-4] rtabmap subscribed to (approx sync):
[rtabmap-4]    /rtabmap/odom \
[rtabmap-4]    /color/image_relay \
[rtabmap-4]    /stereo/depth_relay \
[rtabmap-4]    /color/camera_info \
[rtabmap-4]    /rtabmap/odom_info

ros2 launch rtabmap_ros rtabmap.launch.py \
    args:="--delete_db_on_start" \
    stereo:=true \
    left_image_topic:=/left/image_rect \
    right_image_topic:=/right/image_rect \
    left_camera_info_topic:=/left/camera_info \
    right_camera_info_topic:=/right/camera_info \
    imu_topic:=/imu \
    frame_id:=oak-d_frame \
    approx_sync:=true \
    approx_sync_max_interval:=0.01 \
    wait_imu_to_init:=true \
    database_path:=src \
    rviz:=true
    
ros2 run imu_filter_madgwick imu_filter_node \
   imu/data_raw:=/imu \
   imu/data:=/imu/data  \
   _use_mag:=false \
   _publish_tf:=false

[rtabmap-2] [WARN] [1668690961.973093305] [rtabmap.rtabmap]: We received odometry message, but we cannot get the corresponding TF odom->oak-d_frame at data stamp 1667479754.474561s (odom msg stamp is 1667479754.474581s). Make sure TF of odometry is also published to get more accurate pose estimation. This warning is only printed once.
[rtabmap-2] [WARN] [1668690962.149174322] [rtabmap.rtabmap]: We are receiving imu data (buffer=5), but cannot interpolate imu transform at time 1667479756.473500. IMU won't be added to graph.